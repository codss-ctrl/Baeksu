{% extends 'layout.html' %}
<meta charset="UTF-8">
{% block content %}
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<script src="https://cdnjs.cloudflare.com/ajax/libs/es6-promise/4.1.1/es6-promise.auto.js"></script>
<script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js"></script>
<script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>

<style>

body {
  margin: 0;
  min-width: 250px;
}

/* Include the padding and border in an element's total width and height */
* {
  box-sizing: border-box;
}

/* Remove margins and padding from the list */
ul {
  margin: 0;
  padding: 0;
}

/* Style the list items */
ul li {
  cursor: pointer;
  position: relative;
  padding: 12px 8px 12px 40px;
  list-style-type: none;
  background: #eee;
  font-size: 18px;
  transition: 0.2s;
  
  /* make the list items unselectable */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Set all odd list items to a different color (zebra-stripes) */
ul li:nth-child(odd) {
  background: #f9f9f9;
}

/* Darker background-color on hover */
ul li:hover {
  background: #ddd;
}

/* When clicked on, add a background color and strike out text */
ul li.checked {
  background: #888;
  color: #fff;
  text-decoration: line-through;
}

/* Add a "checked" mark when clicked on */
ul li.checked::before {
  content: '';
  position: absolute;
  border-color: #fff;
  border-style: solid;
  border-width: 0 2px 2px 0;
  top: 10px;
  left: 16px;
  transform: rotate(45deg);
  height: 15px;
  width: 7px;
}

/* Style the close button */
.close {
  position: absolute;
  right: 0;
  top: 0;
  padding: 12px 16px 12px 16px;
}

.close:hover {
  background-color: #f44336;
  color: white;
}

/* Style the header */
.header {
  background-color: rgb(38,148,99);
  padding: 30px 40px;
  color: white;
  text-align: center;
}

/* Clear floats after the header */
.header:after {
  content: "";
  display: table;
  clear: both;
}

/* Style the input */
.memo_input {
  margin: 0;
  border: none;
  border-radius: 0;
  width: 75%;
  padding: 10px;
  float: left;
  font-size: 16px;
}

/* Style the "Add" button */
.addBtn {
  padding: 10px;
  width: 25%;
  background: #d9d9d9;
  color: #555;
  float: left;
  text-align: center;
  font-size: 16px;
  cursor: pointer;
  transition: 0.3s;
  border-radius: 0;
}

.addBtn:hover {
  background-color: #bbb;
}

#save_but {
	float: right;
	font-size: 12px;
	cursor: pointer;
	background-color: #269463;
	color: white;
	padding: 5px 5px 5px 5px;
}

#save_but:hover {
  background-color: #bbb;
  transition: 0.2s;
  color: #000000;
}

</style>
</head>
<body>

  <span id="save_but" onclick="imgfn()" class=""> 메모 저장하기 </span> 
<div id="capture">
<div id="myDIV" class="header">
  <h2 style="margin:5px">메모장</h2>
  <input class="memo_input" type="text" id="myInput" placeholder="이곳에 메모를 작성하세요"> 
  <span onclick="newElement()" class="addBtn" >추가하기</span>
  </div>
	<form>
	   {% for s in list %}         
	       <ul id="myUL">
	         {%if s.memo_yn =='N'%}
	        <li class="" value = {{s.memo_seq}} onclick = 'memoChecked(this);'>{{s.memo_content}} / {{s.in_date}}</li>
	          {%else%}
	        <li class="checked" value = {{s.memo_seq}} onclick = 'memoChecked(this);'>{{s.memo_content}} / {{s.in_date}}</li>
	          {%endif%}
	      </ul>
	    {% endfor %}
	</form>
</div>


<script>

// Create a "close" button and append it to each list item
	var myNodelist = document.getElementsByTagName("LI");
	var i;
	
	for (i = 0; i < myNodelist.length+1; i++) {
	  var span = document.createElement("SPAN");
	  var txt = document.createTextNode("\u00D7");
	  span.className = "close";
	  span.appendChild(txt);
	  //span.addEventListener('onclick', 'del()');   
	  span.setAttribute('onclick', del());
	 
	  myNodelist[i].appendChild(span);
	}


function imgfn(){
	
	function saveAs(uri, fileName) {
		  const link = document.createElement("a");
		  link.href = uri;
		  link.download = fileName;
	
		  document.body.appendChild(link);
	
		  link.click();
	
		  document.body.removeChild(link);
		}
		html2canvas(document.querySelector("#capture")).then(canvas => {
		    saveAs(canvas.toDataURL(), 'fileName.png');
		});
}


function del(){
   // Click on a close button to hide the current list item
   var close = document.getElementsByClassName("close");
   var i;

   for (i = 0; i < close.length; i++) {
     close[i].onclick = function() {
       var div = this.parentElement;
       div.style.display = "none";
       div.on
       memo_seq = div.value;
       memo_delact(memo_seq);
     }
   }
}

// Add a "checked" symbol when clicking on a list item
function memoChecked(liTag){
      
      memo_seq = liTag.value;
      var param = "memo_seq=" +memo_seq;
      
      $.ajax({
         url : "memoSelect.ajax",
         data : param,
         dataType : "json",
         type : "post",
         async : false,
         statusCode : {
            404 : function() {
               alert("네트워크가 불안정합니다. 다시 시도부탁드립니다.");
            }
         },
         success : function(data) {
            console.log(data.flag.memo_yn);
            memo_yn = '';
            if(data.flag.memo_yn == "N"){
               memo_yn = 'Y';
            } else{
               memo_yn = 'N';
            }
            console.log(memo_seq + " / " + memo_yn);
            memo_modact(memo_seq,memo_yn);
         }
      });
}

function memo_modact(memo_seq,memo_yn){
   window.location.href="memo_modact?memo_seq="+memo_seq+"&memo_yn="+memo_yn;
}


function memo_delact(memo_seq){
   window.location.href="memo_delact?memo_seq="+memo_seq;
}


// Create a new list item when clicking on the "Add" button
function newElement() {
  var li = document.createElement("li");
  var inputValue = document.getElementById("myInput").value;
  memo_content = inputValue;
  memo_addact(memo_content);
  
//   var today = new Date();
//   var month = today.getMonth() + 1;
//   var date = today.getDate();
//   var day = today.getDay();
//   var week = new Array('일', '월', '화', '수', '목', '금', '토');
//   var day2 = (month)+'월'+"  "+date+'일' + " " + week[today.getDay()] + '요일'
  
  inputValue = inputValue;
  
  var t = document.createTextNode(inputValue);
  li.appendChild(t);
  if (inputValue === '') {
    alert("You must write something!");
  } else {
    document.getElementById("myUL").appendChild(li);
  }
  document.getElementById("myInput").value = "";

//   var span = document.createElement("SPAN");
//   var txt = document.createTextNode("\u00D7");
//   span.className = "close";
//   span.appendChild(txt);
//   li.appendChild(span);

//   for (i = 0; i < close.length; i++) {
//     close[i].onclick = function() {
//       var div = this.parentElement;
//       div.style.display = "none";
//     }
//   }
}

function memo_addact(memo_content){
   window.location.href="memo_addact?memo_content="+memo_content;
}
</script>

</body>
{% endblock %} 